pipeline {
    agent any

    environment {
        COMPOSE_FILE = 'docker-compose.yml'
        PROJECT_NAME = 'chatapp'
        BACKEND_DIR = 'backend'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/duykhanhdeveloper93/chatApp3'
            }
        }

        stage('Generate Migration') {
            steps {
                dir("${BACKEND_DIR}") {
                    sh '''
                        echo "üì¶ C√†i dependency..."
                        npm install

                        echo "üìÇ N·∫°p bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env..."
                        export $(grep -v '^#' .env | xargs)

                        MIGRATION_NAME="AutoGenerated$(date +%s)"
                        echo "üß† Sinh migration m·ªõi: $MIGRATION_NAME"

                        npx ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:generate \
                            -d data-source.ts src/migrations/$MIGRATION_NAME \
                            || echo "‚ö†Ô∏è Kh√¥ng c√≥ thay ƒë·ªïi n√†o ƒë·ªÉ generate"
                    '''
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                sh '''
                    echo "‚öôÔ∏è ƒêang build Docker images..."
                    docker-compose -p $PROJECT_NAME -f $COMPOSE_FILE build
                '''
            }
        }

        stage('Deploy & Run Migration') {
            steps {
                sh '''
                    echo "üßπ X√≥a container c≈©..."
                    docker-compose -p $PROJECT_NAME -f $COMPOSE_FILE down --remove-orphans || true
                    docker ps -a --filter "name=${PROJECT_NAME}" -q | xargs -r docker rm -f || true
                    docker ps -a --filter "name=chat-" -q | xargs -r docker rm -f || true

                    echo "üöÄ Kh·ªüi ƒë·ªông container m·ªõi..."
                    docker-compose -p $PROJECT_NAME -f $COMPOSE_FILE up -d

                    echo "‚öôÔ∏è Ch·∫°y migration trong container backend..."
                    docker exec ${PROJECT_NAME}-backend-1 npx typeorm migration:run -d dist/data-source.js \
                        || echo "‚ö†Ô∏è Kh√¥ng c√≥ migration n√†o ƒë·ªÉ ch·∫°y"
                '''
            }
        }
    }

    post {
        success {
            echo '‚úÖ Tri·ªÉn khai th√†nh c√¥ng!'
        }
        failure {
            echo '‚ùå Tri·ªÉn khai th·∫•t b·∫°i!'
        }
    }
}
