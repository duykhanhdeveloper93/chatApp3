version: '3.8'

services:
  # Backend
  backend:
    build: ./backend
    container_name: chat-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: chat_user
      DB_PASSWORD: chat_password
      DB_NAME: chat_app_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    networks:
      - chat-network
    depends_on:
      - mysql
      - redis
      - rabbitmq

  # Frontend
  frontend:
    build: ./frontend
    container_name: chat-frontend
    restart: unless-stopped
    ports:
      - "12670:80"
    networks:
      - chat-network

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: chat-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chat_app_dev
      MYSQL_USER: chat_user
      MYSQL_PASSWORD: chat_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - chat-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: chat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: chat-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: chat_user
      RABBITMQ_DEFAULT_PASS: chat_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - chat-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:

networks:
  chat-network:
    driver: bridge
