version: '3.8'

services:
  # Backend
  backend:
    build: ./backend
    container_name: chat-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: chat_user
      DB_PASSWORD: chat_password
      DB_NAME: chat_app_dev
      JWT_SECRET: 2f1a92a1a6d8481fb9f60e6a5e8d7f79b42e6ef6a9243c1d8d0f4f2a9c3b7d88
      JWT_EXPIRES_IN: 7d

      RABBITMQ_DEFAULT_USER: chat_user
      RABBITMQ_DEFAULT_PASS: chat_password
      RABBITMQ_PORT: 5672
      RABBITMQ_MANAGEMENT_PORT: 15672
      RABBITMQ_HOST: rabbitmq
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FRONTEND_URL: http://103.77.242.45:4200 # Thiết lập để enable CORS cho FE gọi được BE


    networks:
      - chat-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Frontend
  frontend:
    build: ./frontend
    container_name: chat-frontend
    restart: unless-stopped
    ports:
      - "4200:80" # đổi thành "22670:80" nếu VPS chỉ mở cổng 22670
    networks:
      - chat-network

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: chat-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chat_app_dev
      MYSQL_USER: chat_user
      MYSQL_PASSWORD: chat_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - chat-network

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: chat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat-network
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: chat-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: chat_user
      RABBITMQ_DEFAULT_PASS: chat_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:

networks:
  chat-network:
    driver: bridge
